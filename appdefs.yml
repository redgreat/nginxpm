---

#
# Definitions for Nginx Proxy Manager docker container.
#
# This file is used as data source to generate README.md and unRAID template files
# from Jinja2 templates.
#

app:
  id: 18
  name: nginx-proxy-manager
  friendly_name: Nginx Proxy Manager
  gui_type: web
  base_os: alpine
  gui_port: 8181
  project:
    description: |-
      Nginx Proxy Manager enables you to easily forward to your websites running at
      home or otherwise, including free SSL, without having to know too much about
      Nginx or Letsencrypt.
    url: https://nginxproxymanager.com
  unraid:
    support_url: https://forums.unraid.net/topic/76460-support-nginx-proxy-manager/
    category: "Network:Web Network:Proxy Tools:"
    extra_description: >-
      **NOTE**: For this container to be accessible from the internet, make sure ports
      **80** and **443** on the internet side of your router are properly forwarded to
      this container.  See the documentation for more details.

      **NOTE**: After a fresh install, the default username/password to connect to the
      management interface are:
      > admin@example.com/changeme.
  documentation:
    sections:
      - title: Default Administrator Account
        level: 2
        content: |-
          After a fresh install, use the following credentials to login:
            - Email address: `admin@example.com`
            - Password: `changeme`

          After you login with this default user, you will be asked to modify your details
          and change your password.
      - title: Accessibility From The Internet
        level: 2
        content: |-
          **NOTE:** This section assumes that the container is using the default `bridge`
          network type.

          For this container to be accessible from the Internet, port forwarding must be
          configured on your router.  This allows HTTP (port 80) and HTTPs (port 443)
          traffic from the Internet to reach this container on your private network.

          Configuration of port forwarding differs from one router to another, but in
          general the same information must be configured:
            - **External port**: The Internet-side port to be forwarded.
            - **Internal port**: The port to forward to.  Also called private port.
            - **Destination IP address**: The IP address of the device on the local
              network to forward to.  Also called private IP address.

          The IP address to forward to should be the IP address of the host running the
          container.  The port to forward to should be the port mapped to the container
          during its creation (via the `-p` parameter of the `docker run` command).

          Since the container needs to handle both HTTP and HTTPs traffic, two ports need
          to be forwarded:

          | Traffic type | Container port | Host port mapped to container | External port | Internal port | Internal IP address                           |
          |--------------|----------------|-------------------------------|---------------|---------------|-----------------------------------------------|
          | HTTP         | 8080           | XXXX                          | 80            | XXXX          | IP address of the host running the container. |
          | HTTPs        | 4443           | YYYY                          | 443           | YYYY          | IP address of the host running the container. |

          `XXXX` and `YYYY` are configurable port values.  Unless they conflict with other
          used ports on the host, they can simply be set to the same value as the
          container port.

          **NOTE**: Some routers don't offer the ability to configure the internal port
          to forward to.  This means that internal port is the same as the external one.
          In a such scenario, `XXXX` must be set to `80` and `YYYY` to `443`.

          For more details about port forwarding, see the following links:
            - [How to Port Forward - General Guide to Multiple Router Brands](https://www.noip.com/support/knowledgebase/general-port-forwarding-guide/)
            - [How to Forward Ports on Your Router](https://www.howtogeek.com/66214/how-to-forward-ports-on-your-router/)
      - title: Troubleshooting
        level: 2
      - title: Password Reset
        level: 3
        content: |-
          The password of a user can be reset to `changeme` with the following command:

          ```
          docker exec CONTAINER_NAME /opt/nginx-proxy-manager/bin/reset-password USER_EMAIL
          ```

          Where:

            - `CONTAINER_NAME` is the name of the running container.
            - `USER_EMAIL` is the email of the address to reset the password.
  changelog:
    - version: 1.0.0
      date: 2024-02-21
      changes:
        - 'init'

container:
  unsupported_volume: /storage

  # Environment variables.
  environment_variables:
    - name: DISABLE_IPV6
      description: >-
        When set to `1`, IPv6 support is disabled.  This is needed when IPv6 is
        not enabled/supported on the host.
      type: public
      default: 0
      unraid_template:
        title: Disable IPv6
        description: >-
          When set to '1', IPv6 support is disabled.
        display: advanced
        required: false
        mask: false

  # Volumes
  volumes: []

  # Network ports
  ports:
    - number: 8181
      protocol: tcp
      description: >-
        Port used to access the web interface of the application.
      mandatory: true
      include_in_quick_start: true
      unraid_template:
        title: Web UI Port
        description: >-
          Port used to access the web interface of the application.
        default: "{{ 7800 + app.id|int }}"
        display: always
        required: true
        mask: false
    - number: 8080
      protocol: tcp
      description: >-
        Port used to serve HTTP requests.
      mandatory: true
      include_in_quick_start: true
      unraid_template:
        title: HTTP Port
        description: >-
          Port used to serve HTTP requests.  NOTE: Your router should be
          configured to forward port 80 to this port.  If your router doesn't
          allow setting the destination/internal IP address, this *must* be set
          to 80.
        default: "{{ app.id|int }}80"
        display: always
        required: true
        mask: false
    - number: 4443
      protocol: tcp
      description: >-
        Port used to serve HTTPs requests.
      mandatory: true
      include_in_quick_start: true
      unraid_template:
        title: HTTPs Port
        description: >-
          Port used to serve HTTPs requests.  NOTE: Your router should be
          configured to forward port 443 to this port.  If your router doesn't
          allow setting the destination/internal IP address, this *must* be set
          to 443.
        default: "{{ app.id|int }}443"
        display: always
        required: true
        mask: false

  # Devices
  devices: []